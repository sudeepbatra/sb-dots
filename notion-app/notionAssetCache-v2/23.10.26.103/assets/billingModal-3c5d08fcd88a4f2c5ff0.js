"use strict";(self.webpackChunknotion_next=self.webpackChunknotion_next||[]).push([[105],{88625:(e,t,r)=>{r.r(t),r.d(t,{SpaceSubscriptionUpdatePaymentMethodModal:()=>_});var a=r(77094),o=r.n(a),n=r(86664),i=r(67294),s=r(480),d=r(16489),c=r(24405),l=r(8848),u=r(59730),p=r(97880),m=r(82990),g=r(5366),f=r(47307),v=r(21325),y=r(16100),h=r(21115),b=r(27832),M=r(45407),S=r(42922),w=r(63296),C=r(64369);function _(e){return o()(n.Elements,{stripe:(0,y.getStripe)()},void 0,i.createElement(k,e))}function k(e){const[t,r,a]=(0,d.oR)(void 0,M.Z),l=(0,n.useStripe)(),m=(0,n.useElements)(),[v,y]=i.useState(!1),[b,_]=i.useState(void 0),k=(0,s.O7)(),B=(0,g.useIntl)(),E=i.useCallback(((e,o)=>{t.paymentRequest||(r({...t,paymentRequest:e,supportsApplePay:Boolean(o&&o.applePay)}),a.addPaymentOption("native_payment_platform"))}),[r,a,t]);i.useEffect((()=>{if(l){const t=l.paymentRequest({country:"US",currency:"usd",total:{label:B.formatMessage({id:"spaceSubscriptionUpdatePaymentMethod.applePay.total.label",defaultMessage:"Notion - You will be charged on a recurring basis"}),amount:0}});t.canMakePayment().then((e=>{e&&E(t,e)})),t.on("token",(t=>{P({environment:k,spaceStore:e.spaceStore,stripeToken:t.token.id,customerData:e.customerData,onComplete:r=>{t.complete(r?"success":"fail"),e.onComplete()}})}))}}),[l,e,B,k,E]);const D=h.zt(t.availablePaymentMethods),U=(0,c.y)(x,[]);return v?o()("div",{style:U.container},void 0,o()("div",{style:U.header},void 0,o()(g.FormattedMessage,{id:"spaceSubscriptionUpdatePaymentMethod.creditCard.update.header",defaultMessage:"Update credit card"})),o()("div",{style:U.cardContainer},void 0,o()(n.CardElement,{options:{hidePostalCode:!0}})),b&&o()(C.Z,{isMultiline:!1,style:U.error},void 0,b),o()("div",{style:U.upgradeButtonContainer},void 0,o()(S.Z,{style:U.upgradeButton,onClick:()=>async function(e){const{stripe:t,elements:r,environment:a,spaceStore:o,customerData:i,onComplete:s,setError:d}=e;if(!t||!r)return;const c=r.getElement(n.CardElement);if(!c)return;const l=await t.createToken(c);!l.error&&l.token?await P({environment:a,spaceStore:o,stripeToken:l.token.id,customerData:i,onComplete:s}):l.error&&d(l.error.message)}({stripe:l,elements:m,environment:k,spaceStore:e.spaceStore,customerData:e.customerData,onComplete:e.onComplete,setError:_})},void 0,o()(g.FormattedMessage,{id:"spaceSubscriptionUpdatePaymentMethod.creditCard.updateButton",defaultMessage:"Update"})))):o()("div",{style:U.container},void 0,o()("div",{style:U.header},void 0,o()(g.FormattedMessage,{id:"spaceSubscriptionUpdatePaymentMethod.update.header",defaultMessage:"Update payment method"})),o()("div",{style:U.optionGroup},void 0,D.map(((r,a)=>{let{type:n,title:i}=r;return o()("div",{onClick:()=>async function(e){const{customerData:t,newPaymentMethod:r,setCreditCardSelected:a,paymentRequest:n}=e;if("credit_card"===r){if("send_invoice"===t.billing){if(!(await f.confirmUserAction({message:o()("span",{},void 0,o()(g.FormattedMessage,{defaultMessage:"Update to automatic billing?",id:"spaceSubscriptionUpdatePaymentMethod.invoiceToCreditCard.confirmMessage",description:"Shown in a dialog to confirm changing the billing method from invoice to automatic"})),description:o()("span",{},void 0,o()(g.FormattedMessage,{defaultMessage:"Your credit card will be charged automatically for future billing events. Invoices will no longer be sent to your billing email, but can be found in the Billing section of your Notion dashboard.",id:"spaceSubscriptionUpdatePaymentMethod.invoiceToCreditCard.confirmDescription",description:"Shown in a dialog to confirm changing the billing method from invoice to automatic"}))})))return}a(!0)}else{if("invoice"===r)throw new u.XV("You cannot select this payment collection method in the app. Please reach out to support.",{type:"collection_method_not_allowed"});"native_payment_platform"===r?n&&n.show():(0,p.t1)(r)}}({customerData:e.customerData,newPaymentMethod:n,paymentRequest:t.paymentRequest,setCreditCardSelected:y})},n,o()(w.Z,{style:{...U.option,...a!==D.length-1?U.optionBorder:void 0}},void 0,i))}))))}async function P(e){const{environment:t,spaceStore:r,stripeToken:a,customerData:o,onComplete:n}=e,{currentUserStore:i}=b.default.state,s=null!=i&&i.isDefined()?i.getEmail():void 0,d=o.billingEmail||s;if(!d)throw new Error("No billing email found.");n(await v.Mg({environment:t,spaceStore:r,stripeToken:a,billingEmail:d,from:"space_settings-billing_tab-update_credit_card"}))}function x(e){return{container:{width:500,background:e.popoverBackground,padding:30,borderRadius:3},optionGroup:{borderRadius:"2px",background:e.groupedFormBackground,border:"1px solid",borderColor:e.groupedFormBorder},option:{display:"flex",justifyContent:"flex-start",border:"none",height:void 0,paddingTop:"15px",paddingBottom:"15px"},optionBorder:{borderBottom:"1px solid",borderBottomColor:e.groupedFormBorder},header:{fontSize:18,marginBottom:16,fontWeight:m.Z.fontWeight.medium},cardContainer:{backgroundColor:e.groupedFormBackground,borderWidth:1,borderStyle:"solid",borderColor:e.groupedFormBackground,padding:"10px",marginTop:"10px",marginBottom:"10px"},upgradeButtonContainer:{width:"100%",justifyContent:"flex-end",display:"flex"},upgradeButton:{marginTop:"20px"},error:{marginTop:8,color:l.ZP.red}}}},16100:(e,t,r)=>{r.r(t),r.d(t,{injectStripe:()=>u,getStripe:()=>p,translateStripeError:()=>m});var a=r(77094),o=r.n(a),n=r(86664),i=r(97894),s=r(67294),d=r(50906),c=r(95477);let l=null;function u(e){return t=>{const[r]=s.useState(p);return o()(n.Elements,{stripe:r},void 0,o()(n.ElementsConsumer,{},void 0,(r=>{let{stripe:a,elements:o}=r;const n={...t,stripe:a,elements:o};return s.createElement(e,n)})))}}async function p(){return l||(i.loadStripe.setLoadParameters({advancedFraudSignals:!1}),l=(0,i.loadStripe)(c.Z.stripe.key)),l}function m(e,t,r){if(!r.code)return r.message||"";switch((0,d.trackStripeErrorMessage)(e,{error:r.code,stripe_decline_code:r.decline_code}),r.code){case"invalid_expiry_year_past":return t.formatMessage({id:"stripeHelpers.invalidExpiryYear.error.message",defaultMessage:"Your card's expiration year is in the past."});case"invalid_cvc":return t.formatMessage({id:"stripeHelpers.invalidCVC.error.message",defaultMessage:"Your card's security code is invalid."});case"invalid_number":return t.formatMessage({id:"stripeHelpers.invalidNumber.error.message",defaultMessage:"Your card number is not a valid credit card number."});case"card_declined":return function(e,t){switch(t){case"expired_card":return e.formatMessage({id:"stripeHelpers.cardDeclined.error.message.expiredCard",defaultMessage:"Your card was declined because it is an expired card.",description:"Shown as an error message if a user's card was declined."});case"incorrect_number":return e.formatMessage({id:"stripeHelpers.cardDeclined.error.message.incorrectNumber",defaultMessage:"Your card was declined because you input an incorrect number.",description:"Shown as an error message if a user's card was declined."});case"insufficient_funds":return e.formatMessage({id:"stripeHelpers.cardDeclined.error.message.declinedFunds",defaultMessage:"Your card was declined because of insufficient funds.",description:"Shown as an error message if a user's card was declined."});case"invalid_cvc":return e.formatMessage({id:"stripeHelpers.cardDeclined.error.message.invalidCvc",defaultMessage:"Your card was declined because you input an invalid CVC number",description:"Shown as an error message if a user's card was declined."});case"invalid_amount":return e.formatMessage({id:"stripeHelpers.cardDeclined.error.message.invalidAmount",defaultMessage:"Your card was declined because payment amount exceeds the amount that's allowed.",description:"Shown as an error message if a user's card was declined."});default:return e.formatMessage({id:"stripeHelpers.cardDeclined.error.message",defaultMessage:"Your card was declined.",description:"Shown as an error message if a user's card was declined."})}}(t,r.decline_code);default:return r.message||""}}},45407:(e,t,r)=>{r.d(t,{Z:()=>s});var a=r(96486),o=r.n(a),n=r(49085);class i extends n.Z{getInitialState(){return{availablePaymentMethods:["credit_card"],paymentRequest:void 0,supportsApplePay:!1}}isPaymentOptionAvailable(e){return this.state.availablePaymentMethods.includes(e)}addPaymentOption(e){const t=o().uniq([...this.state.availablePaymentMethods,e]);this.setState({...this.state,availablePaymentMethods:t})}}const s=i}}]);